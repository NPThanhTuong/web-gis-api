// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApiGIS.Data;

#nullable disable

namespace WebApiGIS.Migrations
{
    [DbContext(typeof(WebGisDbContext))]
    partial class WebGisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApiGIS.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("RoomId");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Đây là mô tả cho tủ lạnh của nhà trọ",
                            EquipmentTypeId = 1,
                            Name = "Tủ lạnh",
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Đây là mô tả cho cái bàn của nhà trọ",
                            EquipmentTypeId = 3,
                            Name = "Bàn",
                            RoomId = 2
                        });
                });

            modelBuilder.Entity("WebApiGIS.Models.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EquipmentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Điện lạnh"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gia dụng"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Khác"
                        });
                });

            modelBuilder.Entity("WebApiGIS.Models.Motel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Geometry>("Geom")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Motels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Đây là mô tả cho khu nhà trọ của cô Bảy",
                            Geom = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POINT (105.766652 10.026272)"),
                            Name = "Nhà Trọ Cô Bảy",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Đây là mô tả cho khu nhà trọ sinh viên",
                            Geom = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POINT (105.766984 10.025973)"),
                            Name = "Nhà Trọ Sinh Viên",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "Đây là mô tả cho khu nhà trọ sinh viên",
                            Geom = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POINT (105.766292 10.026623)"),
                            Name = "Nhà Trọ Cẩm Tú",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("WebApiGIS.Models.MotelImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MotelId")
                        .HasColumnType("integer");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MotelId");

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("MotelImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MotelId = 1,
                            Path = "motel1_image1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            MotelId = 1,
                            Path = "motel1_image2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            MotelId = 1,
                            Path = "motel1_image3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            MotelId = 2,
                            Path = "motel2_image1.jpg"
                        },
                        new
                        {
                            Id = 5,
                            MotelId = 2,
                            Path = "motel2_image2.jpg"
                        },
                        new
                        {
                            Id = 6,
                            MotelId = 2,
                            Path = "motel2_image3.jpg"
                        },
                        new
                        {
                            Id = 7,
                            MotelId = 3,
                            Path = "motel3_image1.jpg"
                        },
                        new
                        {
                            Id = 8,
                            MotelId = 3,
                            Path = "motel3_image2.jpg"
                        },
                        new
                        {
                            Id = 9,
                            MotelId = 3,
                            Path = "motel3_image3.jpg"
                        });
                });

            modelBuilder.Entity("WebApiGIS.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "OWNER"
                        },
                        new
                        {
                            Id = 3,
                            Name = "USER"
                        });
                });

            modelBuilder.Entity("WebApiGIS.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capability")
                        .HasColumnType("integer");

                    b.Property<string>("Descripption")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Geometry>("Geom")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<bool>("IsAvaileble")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMezzanine")
                        .HasColumnType("boolean");

                    b.Property<int>("MotelId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capability = 2,
                            Descripption = "Mô tả cho phòng",
                            Geom = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.7662 10.026, 105.7665 10.026, 105.7665 10.0263, 105.7662 10.0263, 105.7662 10.026))"),
                            IsAvaileble = true,
                            IsMezzanine = true,
                            MotelId = 1,
                            Price = 1200
                        },
                        new
                        {
                            Id = 2,
                            Capability = 2,
                            Descripption = "Mô tả cho phòng",
                            Geom = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.7667 10.026, 105.767 10.026, 105.767 10.0263, 105.7667 10.0263, 105.7667 10.026))"),
                            IsAvaileble = true,
                            IsMezzanine = true,
                            MotelId = 1,
                            Price = 1200
                        },
                        new
                        {
                            Id = 3,
                            Capability = 2,
                            Descripption = "Mô tả cho phòng",
                            Geom = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.7672 10.0261, 105.7675 10.0261, 105.7675 10.0264, 105.7672 10.0264, 105.7672 10.0261))"),
                            IsAvaileble = true,
                            IsMezzanine = true,
                            MotelId = 1,
                            Price = 1300
                        },
                        new
                        {
                            Id = 4,
                            Capability = 3,
                            Descripption = "Mô tả cho phòng",
                            Geom = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.7668 10.0258, 105.767 10.0258, 105.767 10.026, 105.7668 10.026, 105.7668 10.0258))"),
                            IsAvaileble = false,
                            IsMezzanine = true,
                            MotelId = 2,
                            Price = 1500
                        },
                        new
                        {
                            Id = 5,
                            Capability = 3,
                            Descripption = "Mô tả cho phòng",
                            Geom = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.7666 10.0257, 105.7669 10.0257, 105.7669 10.0259, 105.7666 10.0259, 105.7666 10.0257))"),
                            IsAvaileble = false,
                            IsMezzanine = true,
                            MotelId = 2,
                            Price = 1500
                        },
                        new
                        {
                            Id = 6,
                            Capability = 3,
                            Descripption = "Mô tả cho phòng",
                            Geom = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.7671 10.0259, 105.7673 10.0259, 105.7673 10.0261, 105.7671 10.0261, 105.7671 10.0259))"),
                            IsAvaileble = true,
                            IsMezzanine = true,
                            MotelId = 2,
                            Price = 1500
                        },
                        new
                        {
                            Id = 7,
                            Capability = 1,
                            Descripption = "Mô tả cho phòng",
                            Geom = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.7661 10.0265, 105.7663 10.0265, 105.7663 10.0267, 105.7661 10.0267, 105.7661 10.0265))"),
                            IsAvaileble = false,
                            IsMezzanine = false,
                            MotelId = 3,
                            Price = 800
                        },
                        new
                        {
                            Id = 8,
                            Capability = 1,
                            Descripption = "Mô tả cho phòng",
                            Geom = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.7663 10.0266, 105.7665 10.0266, 105.7665 10.0268, 105.7663 10.0268, 105.7663 10.0266))"),
                            IsAvaileble = false,
                            IsMezzanine = false,
                            MotelId = 3,
                            Price = 800
                        },
                        new
                        {
                            Id = 9,
                            Capability = 1,
                            Descripption = "Mô tả cho phòng",
                            Geom = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.7662 10.0268, 105.7664 10.0268, 105.7664 10.027, 105.7662 10.027, 105.7662 10.0268))"),
                            IsAvaileble = true,
                            IsMezzanine = false,
                            MotelId = 3,
                            Price = 800
                        });
                });

            modelBuilder.Entity("WebApiGIS.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "N/A",
                            Dob = new DateOnly(1, 1, 1),
                            Email = "N/A",
                            Name = "NoUser",
                            Password = "N/A",
                            PhoneNumber = "N/A",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Avatar = "no_avatar.jpg",
                            Dob = new DateOnly(2004, 10, 30),
                            Email = "admin@gmail.com",
                            Name = "Administrator",
                            Password = "$2a$11$ICdO8d0/rsTc2FnpksmaTuAb0StXQtMzi33RKIyQmcFWOt.NkOgpq",
                            PhoneNumber = "0829376780",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Avatar = "no_avatar.jpg",
                            Dob = new DateOnly(1994, 10, 30),
                            Email = "owner@gmail.com",
                            Name = "Owner",
                            Password = "$2a$11$N0poLQaIEjzfzpL6gkP/TuL4H82dEsjrBntmImkx9MTvvVjbKupti",
                            PhoneNumber = "0829876785",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            Avatar = "no_avatar.jpg",
                            Dob = new DateOnly(1999, 10, 30),
                            Email = "user@gmail.com",
                            Name = "User",
                            Password = "$2a$11$pVgykLhUd4tLn2pYOIuDPevwMKsuZra5JcQwAmA7ZjRIjSGk/dOmu",
                            PhoneNumber = "0829123746",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("WebApiGIS.Models.Equipment", b =>
                {
                    b.HasOne("WebApiGIS.Models.EquipmentType", "EquipmentType")
                        .WithMany("Equipments")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiGIS.Models.Room", "Room")
                        .WithMany("Equipments")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("WebApiGIS.Models.Motel", b =>
                {
                    b.HasOne("WebApiGIS.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApiGIS.Models.MotelImage", b =>
                {
                    b.HasOne("WebApiGIS.Models.Motel", "Motel")
                        .WithMany("MotelImages")
                        .HasForeignKey("MotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motel");
                });

            modelBuilder.Entity("WebApiGIS.Models.Room", b =>
                {
                    b.HasOne("WebApiGIS.Models.Motel", "Motel")
                        .WithMany()
                        .HasForeignKey("MotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motel");
                });

            modelBuilder.Entity("WebApiGIS.Models.User", b =>
                {
                    b.HasOne("WebApiGIS.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiGIS.Models.User", null)
                        .WithMany("Users")
                        .HasForeignKey("UserId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebApiGIS.Models.EquipmentType", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("WebApiGIS.Models.Motel", b =>
                {
                    b.Navigation("MotelImages");
                });

            modelBuilder.Entity("WebApiGIS.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebApiGIS.Models.Room", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("WebApiGIS.Models.User", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
